# ==================
# Project definition
# ==================

# Derived from https://peps.python.org/pep-0621/

[build-system]
build-backend = "setuptools.build_meta"
requires = [
  "setuptools>=42", # At least v42 of setuptools required.
  "versioningit",
]

[project]
name = "aika"
description = "Time interval parsing utilities for multiple languages."
readme = "README.md"
keywords = [
  "date parsing",
  "multi-language",
  "time",
  "time interval",
  "time range",
  "utility",
]
license = { text = "LGPL 3, EUPL 1.2" }
authors = [
  { name = "Andreas Motl", email = "andreas.motl@panodata.org" },
  { name = "Richard Pobering", email = "richard.pobering@panodata.org" },
]
requires-python = ">=3.8"
classifiers = [
  "Development Status :: 3 - Alpha",
  "Environment :: Console",
  "Environment :: Web Environment",
  "Intended Audience :: Customer Service",
  "Intended Audience :: Developers",
  "Intended Audience :: Education",
  "Intended Audience :: Information Technology",
  "Intended Audience :: Telecommunications Industry",
  "License :: OSI Approved :: European Union Public Licence 1.2 (EUPL 1.2)",
  "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
  "Operating System :: MacOS :: MacOS X",
  "Operating System :: POSIX :: Linux",
  "Operating System :: Unix",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Communications",
  "Topic :: Education",
  "Topic :: Home Automation",
  "Topic :: Software Development :: Libraries",
  "Topic :: Utilities",
]

dynamic = [
  "version",
]

dependencies = [
  "dateparser<1.3",
  "daterangeparser<1.4",
  "fiscalyear<0.5",
  "pendulum<4",
  "python-dateutil<3",
]

optional-dependencies.develop = [
  "mypy<1.16",
  "poethepoet<1",
  "pyproject-fmt<2.6",
  "ruff<0.10",
  "validate-pyproject<0.24",
]
optional-dependencies.release = [
  "build<2",
  "twine<7",
]
optional-dependencies.test = [
  "freezegun<1.6",
  "pytest<9",
  "pytest-cov<7",
]
urls.Changelog = "https://github.com/panodata/aika/blob/main/CHANGES.md"
urls.Issues = "https://github.com/panodata/aika/issues"
urls.Repository = "https://github.com/panodata/aika"

[tool.setuptools]
# https://setuptools.pypa.io/en/latest/userguide/package_discovery.html
packages = [ "aika" ]

[tool.black]
line-length = 120

[tool.ruff]
line-length = 120

extend-exclude = [
  "examples/*",
]

lint.select = [
  # Builtins
  "A",
  # Bugbear
  "B",
  # comprehensions
  "C4",
  # Pycodestyle
  "E",
  # eradicate
  "ERA",
  # Pyflakes
  "F",
  # isort
  "I",
  # pandas-vet
  "PD",
  # return
  "RET",
  # Bandit
  "S",
  # print
  "T20",
  "W",
  # flake8-2020
  "YTT",
]

lint.ignore = [
  "RET505", # Unnecessary `elif` after `return` statement
]

lint.per-file-ignores."aika/cli.py" = [ "T201" ] # Allow `print`
lint.per-file-ignores."tests/*" = [ "S101" ]     # Use of `assert` detected

[tool.pytest.ini_options]
minversion = "2.0"
addopts = """
  -rfEX -p pytester --strict-markers --verbosity=3
  --cov --cov-report=term-missing --cov-report=xml
  --capture=no
  """
log_level = "DEBUG"
log_cli_level = "DEBUG"
testpaths = [ "tests" ]
xfail_strict = true
markers = [
]

[tool.coverage.run]
branch = false
source = [ "aika" ]

[tool.coverage.report]
fail_under = 0
show_missing = true
omit = [
]

[tool.mypy]
packages = [ "aika" ]
exclude = [
]
check_untyped_defs = true
ignore_missing_imports = true
implicit_optional = true
install_types = true
no_implicit_optional = true
non_interactive = true
show_error_codes = true
strict_equality = true
warn_unused_ignores = true
warn_redundant_casts = true

[tool.versioningit.vcs]
method = "git"
default-tag = "0.0.0"

# ===================
# Tasks configuration
# ===================

[tool.poe.tasks]

check = [ "lint", "test" ]

format = [
  { cmd = "ruff format ." },
  # Configure Ruff not to auto-fix (remove!):
  # unused imports (F401), unused variables (F841), `print` statements (T201), and commented-out code (ERA001).
  { cmd = "ruff check --fix --ignore=ERA --ignore=F401 --ignore=F841 --ignore=T20 --ignore=ERA001 ." },
  { cmd = "pyproject-fmt --keep-full-version pyproject.toml" },
]
lint = [
  { cmd = "ruff format --check" },
  { cmd = "ruff check ." },
  { cmd = "validate-pyproject pyproject.toml" },
  { cmd = "mypy" },
]
test = [
  { cmd = "pytest" },
]

build = { cmd = "python -m build" }
upload = { cmd = "twine upload --skip-existing dist/*.tar.gz dist/*.whl" }
release = [
  "build",
  "upload",
]
